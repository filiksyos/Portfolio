'use client';

import { useState, useEffect } from 'react';
import Card from '../ui/card';
import { cn } from '@/utils/lib';

// Define skills with names and SVG content
const skills = [
  { 
    name: 'Android Studio', 
    svg: (isDarkMode = false) => (
      <svg width="100%" height="100%" viewBox="0 0 128 128" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path opacity="0.2" d="M49.8535 123.492C47.8751 123.023 46.2193 121.926 43.9021 119.549C40.0315 115.578 36.8904 113.925 31.4309 112.985C25.7674 112.01 23.2506 109.905 21.7375 104.877C19.8698 98.6708 17.9177 95.6985 13.6285 92.5305C8.7629 88.9366 7.51452 85.7674 8.70211 80.0242C9.80208 74.7048 9.38087 70.9229 7.14689 66.0604C4.48145 60.2587 4.81049 57.1586 8.5962 52.4053C12.0668 48.0478 13.1561 45.1674 13.6759 38.9737C14.2004 32.7233 15.9394 30.159 21.0608 28.0837C25.3351 26.3518 28.9917 23.3452 31.0189 19.8957C33.3632 15.9068 33.7054 15.4495 35.1579 14.3658C37.5018 12.6171 39.3969 12.1325 43.0061 12.3588C49.2755 12.7519 52.6358 11.9991 56.846 9.25832C62.3354 5.68473 65.6639 5.68473 71.1534 9.25832C75.3636 11.9991 78.7239 12.7519 84.9933 12.3588C90.922 11.987 93.389 13.5434 97.0028 19.9355C98.7937 23.1032 102.454 26.1862 106.461 27.9007C112.167 30.3428 113.825 32.5717 114.246 38.3638C114.702 44.6367 115.988 48.144 119.395 52.4053C123.189 57.1501 123.52 60.2531 120.852 66.0604C118.619 70.9229 118.197 74.7048 119.297 80.0242C120.485 85.7674 119.236 88.9366 114.371 92.5305C110.082 95.6985 108.13 98.6708 106.262 104.877C104.749 109.905 102.232 112.01 96.5685 112.985C91.0974 113.927 87.9527 115.585 84.0973 119.562C79.8233 123.969 76.7594 124.697 70.7842 122.721C65.8971 121.106 62.1344 121.099 57.2668 122.697C53.8571 123.816 52.0396 124.011 49.8535 123.492V123.492Z" fill="black"/>
        <path d="M49.8535 122.321C47.8751 121.851 46.2193 120.754 43.9021 118.377C40.0315 114.407 36.8904 112.753 31.4309 111.814C25.7674 110.839 23.2506 108.733 21.7375 103.706C19.8698 97.499 17.9177 94.5267 13.6285 91.3586C8.7629 87.7647 7.51452 84.5955 8.70211 78.8524C9.80208 73.5329 9.38087 69.751 7.14689 64.8885C4.48145 59.0868 4.81049 55.9867 8.5962 51.2335C12.0668 46.8759 13.1561 43.9955 13.6759 37.8018C14.2004 31.5514 15.9394 28.9871 21.0608 26.9119C25.3351 25.1799 28.9917 22.1733 31.0189 18.7238C33.3632 14.7349 33.7054 14.2776 35.1579 13.194C37.5018 11.4452 39.3969 10.9606 43.0061 11.1869C49.2755 11.58 52.6358 10.8273 56.846 8.08645C62.3354 4.51285 65.6639 4.51285 71.1534 8.08645C75.3636 10.8273 78.7239 11.58 84.9933 11.1869C90.922 10.8151 93.389 12.3715 97.0028 18.7636C98.7937 21.9314 102.454 25.0143 106.461 26.7289C112.167 29.1709 113.825 31.3998 114.246 37.192C114.702 43.4648 115.988 46.9721 119.395 51.2335C123.189 55.9782 123.52 59.0812 120.852 64.8885C118.619 69.751 118.197 73.5329 119.297 78.8524C120.485 84.5955 119.236 87.7647 114.371 91.3586C110.082 94.5267 108.13 97.499 106.262 103.706C104.749 108.733 102.232 110.839 96.5685 111.814C91.0974 112.755 87.9527 114.414 84.0973 118.39C79.8233 122.798 76.7594 123.525 70.7842 121.55C65.8971 119.934 62.1344 119.927 57.2668 121.525C53.8571 122.644 52.0396 122.839 49.8535 122.321V122.321Z" fill="white"/>
        <path d="M85.0051 59.0295C84.6361 58.2764 84.9524 57.3728 85.7054 57.0038C86.4584 56.6349 87.362 56.9511 87.731 57.7041C88.1 58.4572 87.7837 59.3608 87.0307 59.7298C86.2777 60.0987 85.3741 59.7825 85.0051 59.0295ZM92.332 74.0898C91.963 73.3368 92.2792 72.4332 93.0323 72.0642C93.7853 71.6952 94.6889 72.0115 95.0579 72.7645C95.4269 73.5175 95.1106 74.4211 94.3576 74.7901C93.6046 75.1591 92.7009 74.8428 92.332 74.0898ZM92.972 54.549C88.1527 51.1077 81.865 50.2192 76.0442 52.4707L91.9554 85.1893C97.3169 82.004 100.495 76.4995 100.766 70.5883L106.805 71.0175C107.151 71.0401 107.453 70.7841 107.475 70.4301C107.498 70.0837 107.242 69.7825 106.888 69.76L100.773 69.3232C100.713 66.7479 100.096 64.1199 98.8681 61.5897C97.6407 59.0671 95.954 56.9587 93.966 55.3171L97.3998 50.2342C97.5955 49.9481 97.5202 49.5565 97.2341 49.3607C96.948 49.1649 96.5564 49.2402 96.3606 49.5264L92.972 54.5415" fill="#3DDC84"/>
        <path d="M78.3033 66.8683C73.8153 69.037 68.9884 70.1364 63.9583 70.1364C52.6254 70.1364 42.3316 64.3834 36.3301 55.2267C35.8557 54.5038 34.8768 54.3306 34.1765 54.8426L28.4008 59.0972C27.7457 59.5791 27.5951 60.4978 28.0544 61.1755C35.9385 72.9452 49.2895 80.3172 63.9583 80.3172C70.5321 80.3172 76.8499 78.8789 82.731 76.0401L78.3033 66.8683Z" fill={isDarkMode ? "#4285F4" : "#4285F4"}/>
        <path d="M63.9057 30.6708H67.0307V23.7656C67.0307 22.0412 65.6301 20.6406 63.9057 20.6406C62.1813 20.6406 60.7806 22.0412 60.7806 23.7656V30.6708H63.9057Z" fill={isDarkMode ? "#4285F4" : "#4285F4"}/>
        <path d="M55.7729 44.1499L34.2893 88.367C33.8225 89.3234 33.574 90.3625 33.5514 91.4243L33.4234 97.215C33.3932 98.7135 35.1252 99.5569 36.2848 98.6081L40.7577 94.9334C41.5785 94.2632 42.2412 93.4198 42.7081 92.4635L63.8829 48.8713L55.7804 44.1574L55.7729 44.1499Z" fill={isDarkMode ? "#4285F4" : "#4285F4"}/>
        <path d="M94.2671 91.4167C94.2445 90.355 93.9885 89.3158 93.5292 88.3595L72.0456 44.1423L63.9431 48.8713L85.118 92.4484C85.5848 93.4047 86.2475 94.2406 87.0683 94.9183L91.5412 98.593C92.7008 99.5418 94.4403 98.6984 94.4027 97.1999L94.2747 91.4092L94.2671 91.4167Z" fill={isDarkMode ? "#4285F4" : "#4285F4"}/>
        <path d="M63.9053 30.1211C58.7321 30.1211 54.5303 34.3305 54.5303 39.4962C54.5303 44.6619 58.7396 48.8713 63.9053 48.8713C69.071 48.8713 73.2804 44.6619 73.2804 39.4962C73.2804 34.3305 69.071 30.1211 63.9053 30.1211ZM63.9053 44.6544C61.0665 44.6544 58.7472 42.3426 58.7472 39.4962C58.7472 36.6498 61.0589 34.338 63.9053 34.338C66.7517 34.338 69.0635 36.6498 69.0635 39.4962C69.0635 42.3426 66.7517 44.6544 63.9053 44.6544Z" fill={isDarkMode ? "#073042" : "#073042"}/>
      </svg>
    )
  },
  { 
    name: 'Kotlin', 
    svg: (isDarkMode = false) => (
      <svg viewBox="0 0 20.554 20.543" xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
        <defs>
          <radialGradient id="kotlin-gradient" cx="22.432" cy="3.493" r="21.679" gradientTransform="matrix(1.0856 0 0 1.0856 -4.4842 -2.9511)" gradientUnits="userSpaceOnUse">
            <stop stop-color={isDarkMode ? "#e44857" : "#e44857"} offset=".003"/>
            <stop stop-color={isDarkMode ? "#c711e1" : "#c711e1"} offset=".469"/>
            <stop stop-color={isDarkMode ? "#7f52ff" : "#7f52ff"} offset="1"/>
          </radialGradient>
        </defs>
        <path d="m20.554 20.543h-20.554v-20.543h20.554l-10.489 10.119z" fill="url(#kotlin-gradient)" stroke-width="1.0858"/>
      </svg>
    )
  },
  { 
    name: 'Cursor', 
    svg: (isDarkMode = false) => (
      <svg height="100%" viewBox="0 0 24 24" width="100%" xmlns="http://www.w3.org/2000/svg">
        <path d="M11.925 24l10.425-6-10.425-6L1.5 18l10.425 6z" fill={isDarkMode ? "rgba(255, 255, 255, 0.8)" : "rgba(0, 0, 0, 0.8)"}/>
        <path d="M22.35 18V6L11.925 0v12l10.425 6z" fill={isDarkMode ? "rgba(255, 255, 255, 0.2)" : "rgba(0, 0, 0, 0.2)"}/>
        <path d="M11.925 0L1.5 6v12l10.425-6V0z" fill={isDarkMode ? "rgba(255, 255, 255, 0.4)" : "rgba(0, 0, 0, 0.4)"}/>
        <path d="M22.35 6L11.925 24V12L22.35 6z" fill={isDarkMode ? "#ddd" : "#555"}/>
        <path d="M22.35 6l-10.425 6L1.5 6h20.85z" fill={isDarkMode ? "#333" : "#000"}/>
      </svg>
    )
  },
  { 
    name: 'GitHub', 
    svg: (isDarkMode = false) => (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="100%" height="100%">
        <path 
          fill={isDarkMode ? "#fff" : "#000"} 
          d="M12 0C5.37 0 0 5.37 0 12c0 5.31 3.435 9.795 8.205 11.385.6.105.825-.255.825-.57 0-.285-.015-1.23-.015-2.235-3.015.555-3.795-.735-4.035-1.41-.135-.345-.72-1.41-1.23-1.695-.42-.225-1.02-.78-.015-.795.945-.015 1.62.87 1.845 1.23 1.08 1.815 2.805 1.305 3.495.99.105-.78.42-1.305.765-1.605-2.67-.3-5.46-1.335-5.46-5.925 0-1.305.465-2.385 1.23-3.225-.12-.3-.54-1.53.12-3.18 0 0 1.005-.315 3.3 1.23.96-.27 1.98-.405 3-.405s2.04.135 3 .405c2.295-1.56 3.3-1.23 3.3-1.23.66 1.65.24 2.88.12 3.18.765.84 1.23 1.905 1.23 3.225 0 4.605-2.805 5.625-5.475 5.925.435.375.81 1.095.81 2.22 0 1.605-.015 2.895-.015 3.3 0 .315.225.69.825.57A12.02 12.02 0 0024 12c0-6.63-5.37-12-12-12z"
        />
      </svg>
    )
  },
  { 
    name: 'Next.js', 
    svg: (isDarkMode = false) => (
      <svg width="100%" height="100%" viewBox="0 0 256 256" version="1.1" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid">
        <g>
          <path 
            d="M119.616813,0.0688905149 C119.066276,0.118932037 117.314565,0.294077364 115.738025,0.419181169 C79.3775171,3.69690087 45.3192571,23.3131775 23.7481916,53.4631946 C11.7364614,70.2271045 4.05395894,89.2428829 1.15112414,109.384595 C0.12512219,116.415429 0,118.492153 0,128.025062 C0,137.557972 0.12512219,139.634696 1.15112414,146.665529 C8.10791789,194.730411 42.3163245,235.11392 88.7116325,250.076335 C97.0197458,252.753556 105.778299,254.580072 115.738025,255.680985 C119.616813,256.106338 136.383187,256.106338 140.261975,255.680985 C157.453763,253.779407 172.017986,249.525878 186.382014,242.194795 C188.584164,241.068861 189.00958,240.768612 188.709286,240.518404 C188.509091,240.36828 179.124927,227.782837 167.86393,212.570214 L147.393939,184.922273 L121.743891,146.965779 C107.630108,126.098464 96.0187683,109.034305 95.9186706,109.034305 C95.8185728,109.009284 95.7184751,125.873277 95.6684262,146.465363 C95.5933529,182.52028 95.5683284,183.971484 95.1178886,184.82219 C94.4672532,186.048207 93.9667644,186.548623 92.915738,187.099079 C92.114956,187.499411 91.4142717,187.574474 87.6355816,187.574474 L83.3063539,187.574474 L82.1552297,186.848872 C81.4044966,186.373477 80.8539589,185.747958 80.4785924,185.022356 L79.9530792,183.896422 L80.0031281,133.729796 L80.0782014,83.5381493 L80.8539589,82.5623397 C81.25435,82.0369037 82.1051808,81.3613431 82.7057674,81.0360732 C83.7317693,80.535658 84.1321603,80.4856165 88.4613881,80.4856165 C93.5663734,80.4856165 94.4172043,80.6857826 95.7434995,82.1369867 C96.1188661,82.5373189 110.007429,103.454675 126.623656,128.650581 C143.239883,153.846488 165.962072,188.250034 177.122972,205.139048 L197.392766,235.839522 L198.418768,235.163961 C207.502639,229.259062 217.112023,220.852086 224.719453,212.09482 C240.910264,193.504394 251.345455,170.835585 254.848876,146.665529 C255.874878,139.634696 256,137.557972 256,128.025062 C256,118.492153 255.874878,116.415429 254.848876,109.384595 C247.892082,61.3197135 213.683675,20.9362052 167.288368,5.97379012 C159.105376,3.32158945 150.396872,1.49507389 140.637341,0.394160408 C138.234995,0.143952798 121.693842,-0.131275573 119.616813,0.0688905149 L119.616813,0.0688905149 Z M172.017986,77.4831252 C173.219159,78.0836234 174.195112,79.2345784 174.545455,80.435575 C174.74565,81.0861148 174.795699,94.9976579 174.74565,126.348671 L174.670577,171.336 L166.73783,159.17591 L158.780059,147.01582 L158.780059,114.313685 C158.780059,93.1711423 158.880156,81.2862808 159.030303,80.7108033 C159.430694,79.3096407 160.306549,78.2087272 161.507722,77.5581875 C162.533724,77.0327515 162.909091,76.98271 166.837928,76.98271 C170.541544,76.98271 171.19218,77.0327515 172.017986,77.4831252 Z"
            fill={isDarkMode ? "#fff" : "#000"}
          />
        </g>
      </svg>
    )
  },
  { 
    name: 'Notion', 
    svg: (isDarkMode = false) => (
      <svg viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg" width="100%" height="100%">
        <path
          d="M3.25781 3.11684C3.67771 3.45796 3.83523 3.43193 4.62369 3.37933L12.0571 2.93299C12.2147 2.93299 12.0836 2.77571 12.0311 2.74957L10.7965 1.85711C10.56 1.67347 10.2448 1.46315 9.64083 1.51576L2.44308 2.04074C2.18059 2.06677 2.12815 2.19801 2.2327 2.30322L3.25781 3.11684ZM3.7041 4.84917V12.6704C3.7041 13.0907 3.91415 13.248 4.38693 13.222L12.5562 12.7493C13.0292 12.7233 13.0819 12.4341 13.0819 12.0927V4.32397C13.0819 3.98306 12.9508 3.79921 12.6612 3.82545L4.12422 4.32397C3.80918 4.35044 3.7041 4.50803 3.7041 4.84917ZM11.7688 5.26872C11.8212 5.50518 11.7688 5.74142 11.5319 5.76799L11.1383 5.84641V11.6205C10.7965 11.8042 10.4814 11.9092 10.2188 11.9092C9.79835 11.9092 9.69305 11.7779 9.37812 11.3844L6.80345 7.34249V11.2532L7.61816 11.437C7.61816 11.437 7.61816 11.9092 6.96086 11.9092L5.14879 12.0143C5.09615 11.9092 5.14879 11.647 5.33259 11.5944L5.80546 11.4634V6.29276L5.1489 6.24015C5.09625 6.00369 5.22739 5.66278 5.5954 5.63631L7.53935 5.50528L10.2188 9.5998V5.97765L9.53564 5.89924C9.4832 5.61018 9.69305 5.40028 9.95576 5.37425L11.7688 5.26872ZM1.83874 1.33212L9.32557 0.780787C10.245 0.701932 10.4815 0.754753 11.0594 1.17452L13.4492 2.85424C13.8436 3.14309 13.975 3.22173 13.975 3.53661V12.7493C13.975 13.3266 13.7647 13.6681 13.0293 13.7203L4.33492 14.2454C3.78291 14.2717 3.52019 14.193 3.23111 13.8253L1.47116 11.5419C1.1558 11.1216 1.02466 10.8071 1.02466 10.4392V2.25041C1.02466 1.77825 1.23504 1.38441 1.83874 1.33212Z"
          fill={isDarkMode ? "#fff" : "#000"}
        />
      </svg>
    )
  },
  { 
    name: 'ChatGPT', 
    svg: (isDarkMode = false) => (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 50" width="100%" height="100%">
        <path 
          d="M45.403,25.562c-0.506-1.89-1.518-3.553-2.906-4.862c1.134-2.665,0.963-5.724-0.487-8.237	c-1.391-2.408-3.636-4.131-6.322-4.851c-1.891-0.506-3.839-0.462-5.669,0.088C28.276,5.382,25.562,4,22.647,4	c-4.906,0-9.021,3.416-10.116,7.991c-0.01,0.001-0.019-0.003-0.029-0.002c-2.902,0.36-5.404,2.019-6.865,4.549	c-1.391,2.408-1.76,5.214-1.04,7.9c0.507,1.891,1.519,3.556,2.909,4.865c-1.134,2.666-0.97,5.714,0.484,8.234	c1.391,2.408,3.636,4.131,6.322,4.851c0.896,0.24,1.807,0.359,2.711,0.359c1.003,0,1.995-0.161,2.957-0.45	C21.722,44.619,24.425,46,27.353,46c4.911,0,9.028-3.422,10.12-8.003c2.88-0.35,5.431-2.006,6.891-4.535	C45.754,31.054,46.123,28.248,45.403,25.562z M35.17,9.543c2.171,0.581,3.984,1.974,5.107,3.919c1.049,1.817,1.243,4,0.569,5.967	c-0.099-0.062-0.193-0.131-0.294-0.19l-9.169-5.294c-0.312-0.179-0.698-0.177-1.01,0.006l-10.198,6.041l-0.052-4.607l8.663-5.001	C30.733,9.26,33,8.963,35.17,9.543z M29.737,22.195l0.062,5.504l-4.736,2.805l-4.799-2.699l-0.062-5.504l4.736-2.805L29.737,22.195z M14.235,14.412C14.235,9.773,18.009,6,22.647,6c2.109,0,4.092,0.916,5.458,2.488C28,8.544,27.891,8.591,27.787,8.651l-9.17,5.294	c-0.312,0.181-0.504,0.517-0.5,0.877l0.133,11.851l-4.015-2.258V14.412z M6.528,23.921c-0.581-2.17-0.282-4.438,0.841-6.383	c1.06-1.836,2.823-3.074,4.884-3.474c-0.004,0.116-0.018,0.23-0.018,0.348V25c0,0.361,0.195,0.694,0.51,0.872l10.329,5.81	L19.11,34.03l-8.662-5.002C8.502,27.905,7.11,26.092,6.528,23.921z M14.83,40.457c-2.171-0.581-3.984-1.974-5.107-3.919	c-1.053-1.824-1.249-4.001-0.573-5.97c0.101,0.063,0.196,0.133,0.299,0.193l9.169,5.294c0.154,0.089,0.327,0.134,0.5,0.134	c0.177,0,0.353-0.047,0.51-0.14l10.198-6.041l0.052,4.607l-8.663,5.001C19.269,40.741,17.001,41.04,14.83,40.457z M35.765,35.588	c0,4.639-3.773,8.412-8.412,8.412c-2.119,0-4.094-0.919-5.459-2.494c0.105-0.056,0.216-0.098,0.32-0.158l9.17-5.294	c0.312-0.181,0.504-0.517,0.5-0.877L31.75,23.327l4.015,2.258V35.588z M42.631,32.462c-1.056,1.83-2.84,3.086-4.884,3.483	c0.004-0.12,0.018-0.237,0.018-0.357V25c0-0.361-0.195-0.694-0.51-0.872l-10.329-5.81l3.964-2.348l8.662,5.002	c1.946,1.123,3.338,2.937,3.92,5.107C44.053,28.249,43.754,30.517,42.631,32.462z"
          fill={isDarkMode ? "#fff" : "#000"}
        />
      </svg>
    )
  },
  { 
    name: 'Telegram', 
    svg: (isDarkMode = false) => (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="100%" height="100%">
        <path 
          fill={isDarkMode ? "#26A5E4" : "#26A5E4"} 
          d="M12,0C5.373,0,0,5.373,0,12s5.373,12,12,12s12-5.373,12-12S18.627,0,12,0z M17.562,8.161c-0.18,1.897-0.962,6.502-1.359,8.627c-0.168,0.9-0.5,1.201-0.82,1.23c-0.697,0.061-1.225-0.46-1.9-0.9c-1.056-0.693-1.653-1.124-2.678-1.8c-1.185-0.78-0.417-1.21,0.258-1.91c0.177-0.184,3.247-2.977,3.307-3.23c0.007-0.032,0.014-0.15-0.056-0.212s-0.174-0.041-0.249-0.024c-0.106,0.024-1.793,1.14-5.061,3.345c-0.48,0.33-0.913,0.49-1.302,0.48c-0.428-0.008-1.252-0.241-1.865-0.44c-0.752-0.245-1.349-0.374-1.297-0.788c0.027-0.216,0.325-0.437,0.893-0.663c3.498-1.524,5.83-2.529,6.998-3.014c3.332-1.386,4.025-1.627,4.476-1.635c0.099-0.002,0.32,0.023,0.465,0.14c0.12,0.098,0.153,0.23,0.159,0.324C17.538,7.855,17.58,7.983,17.562,8.161z"
        />
      </svg>
    )
  }
];

export default function SkillsShowcase() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isTransitioning, setIsTransitioning] = useState(false);
  const [isDarkMode, setIsDarkMode] = useState(false);
  
  useEffect(() => {
    // Check for dark mode
    const updateTheme = () => {
      const isDark = document.documentElement.classList.contains('dark');
      setIsDarkMode(isDark);
    };

    // Initial check
    updateTheme();

    // Set up MutationObserver to detect theme changes
    const observer = new MutationObserver(updateTheme);
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class']
    });

    // Rotate through skills
    const interval = setInterval(() => {
      setIsTransitioning(true);
      setTimeout(() => {
        setCurrentIndex((prev) => (prev + 1) % skills.length);
        setIsTransitioning(false);
      }, 300); // Match transition duration
    }, 1500); // Total time for each skill (1.5 seconds)
    
    return () => {
      clearInterval(interval);
      observer.disconnect();
    };
  }, []);
  
  const currentSkill = skills[currentIndex];
  
  return (
    <Card className='flex h-full flex-col justify-center items-center gap-3 relative'>
      <div className="flex flex-col items-center justify-center w-full h-full px-4">
        <div 
          className={cn(
            "flex flex-col items-center justify-center transition-opacity duration-300",
            isTransitioning ? "opacity-0" : "opacity-100"
          )}
        >
          <div className="w-16 h-16 md:w-24 md:h-24 mb-3">
            {currentSkill.svg(isDarkMode)}
          </div>
          <p className="font-pixelify-sans text-xl text-center">
            {currentSkill.name}
          </p>
        </div>
      </div>
      <div className='flex items-center gap-3 border-t border-dark-50 bg-white w-full px-8 py-2 text-dark-400 dark:border-dark-800 dark:bg-dark-900'>
        <div className='inline-flex items-center justify-center gap-1'>
          {skills.map((_, index) => (
            <div 
              key={index}
              className={cn(
                'w-1 h-2 rounded-full transition-colors duration-300',
                currentIndex === index ? 'bg-blue-500' : 'bg-gray-300 dark:bg-gray-600'
              )} 
            />
          ))}
        </div>
        <p className='text-sm'>My Tech Stack</p>
      </div>
    </Card>
  );
}

// Fall back in case of error
export function ErrorSkillsDisplay() {
  return (
    <Card className='flex h-full flex-col justify-end gap-3'>
      <div className='flex flex-col gap-3 px-8'>
        <h2 className='font-pixelify-sans text-2xl'>Skills</h2>
        <p className='font-medium'>Failed to load skills</p>
      </div>
      <div className='flex items-center gap-3 border-t border-dark-50 bg-white px-8 py-2 text-dark-400 dark:border-dark-800 dark:bg-dark-900'>
        <p className='text-sm'>My Tech Stack</p>
      </div>
    </Card>
  );
} 